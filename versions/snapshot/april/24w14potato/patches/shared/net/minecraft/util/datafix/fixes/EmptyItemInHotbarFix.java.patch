--- a/net/minecraft/util/datafix/fixes/EmptyItemInHotbarFix.java
+++ b/net/minecraft/util/datafix/fixes/EmptyItemInHotbarFix.java
@@ -17,10 +17,10 @@
    }
 
    public TypeRewriteRule makeRule() {
-      OpticFinder<Pair<String, Pair<Either<Pair<String, String>, Unit>, Pair<Either<?, Unit>, Dynamic<?>>>>> opticfinder = DSL.typeFinder(this.getInputSchema().getType(References.f_16782_));
+      OpticFinder<Pair<String, Pair<Either<Pair<String, String>, Unit>, Pair<Either<?, Unit>, Dynamic<?>>>>> opticfinder = (OpticFinder<Pair<String, Pair<Either<Pair<String, String>, Unit>, Pair<Either<?, Unit>, Dynamic<?>>>>>)DSL.typeFinder(this.getInputSchema().getType(References.f_16782_));
       return this.fixTypeEverywhereTyped("EmptyItemInHotbarFix", this.getInputSchema().getType(References.f_16774_), (p_330108_) -> {
          return p_330108_.update(opticfinder, (p_329750_) -> {
-            return p_329750_.mapSecond((p_330178_) -> {
+            return p_329750_.<Pair<Either<Pair<String, String>, Unit>, Pair<Either<?, Unit>, Dynamic<?>>>>mapSecond((p_330178_) -> {
                Optional<String> optional = p_330178_.getFirst().left().map(Pair::getSecond);
                Dynamic<?> dynamic = p_330178_.getSecond().getSecond();
                boolean flag = optional.isEmpty() || optional.get().equals("minecraft:air");
