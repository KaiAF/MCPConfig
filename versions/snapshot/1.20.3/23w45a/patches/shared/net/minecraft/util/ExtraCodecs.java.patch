--- a/net/minecraft/util/ExtraCodecs.java
+++ b/net/minecraft/util/ExtraCodecs.java
@@ -246,7 +246,7 @@
       }, (p_184459_) -> {
          return ImmutableList.of(p_184366_.apply(p_184459_), p_184367_.apply(p_184459_));
       });
-      Codec<I> codec1 = RecordCodecBuilder.<Pair>create((p_184360_) -> {
+      Codec<I> codec1 = RecordCodecBuilder.<Pair<P,P>>create((p_184360_) -> {
          return p_184360_.group(p_184362_.fieldOf(p_184363_).forGetter(Pair::getFirst), p_184362_.fieldOf(p_184364_).forGetter(Pair::getSecond)).apply(p_184360_, Pair::of);
       }).comapFlatMap((p_184392_) -> {
          return p_184365_.apply((P)p_184392_.getFirst(), (P)p_184392_.getSecond());
@@ -588,7 +588,7 @@
          }
 
          private <T, V2 extends V> DataResult<T> m_309853_(Codec<V2> p_311387_, V p_311563_, DynamicOps<T> p_311448_) {
-            return p_311387_.encodeStart(p_311448_, p_311563_);
+            return p_311387_.encodeStart(p_311448_, (V2)p_311563_);
          }
       };
    }
